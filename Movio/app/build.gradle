apply plugin: 'com.android.application'
def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = 0

android {
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    flavorDimensions "default"
    useLibrary  'org.apache.http.legacy'
    defaultConfig {
        applicationId "uco_396575.movio2.pv256.fi.muni.cz.movio"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        resValue "string", "app_name", "Movio"

    }
    dataBinding {
        enabled = true
    }
    buildTypes {

        debug {
            defaultConfig.versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}-${defaultConfig.versionCode}"
        }
        release {
            defaultConfig.versionName "${versionMajor}.${versionMinor}.${versionPatch}"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //selecting only fully translated languages
            defaultConfig.resConfigs "en", "sk"
            signingConfig signingConfigs.release
        }
        staging {
            // Specifies a sorted list of fallback build types that the
            // plugin should try to use when a dependency does not include a
            // "staging" build type. You may specify as many fallbacks as you
            // like, and the plugin selects the first build type that's
            // available in the dependency.
            matchingFallbacks = ['debug', 'release']
        }

        productFlavors {
            primary {
                applicationIdSuffix ".primary"
                versionNameSuffix "-primary"
                buildConfigField("boolean", "LOGGING", "true")
                resValue "string", "app_name", "Movio"
            }
            secondary {
                applicationIdSuffix ".secondary"
                versionNameSuffix "-secondary"
                buildConfigField("boolean", "LOGGING", "false")
                resValue "string", "app_name", "Movio2"

            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:palette-v7:26.1.0'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    compile 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion
    compile 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion
    annotationProcessor 'android.arch.lifecycle:compiler:' + rootProject.archLifecycleVersion
    annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.archRoomVersion

}
